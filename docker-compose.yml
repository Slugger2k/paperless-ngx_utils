services:
  broker:
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - /share/ZFS19_DATA/Dokumente/paperless2/redis/data:/data
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - broker
      - postgres
      - gotenberg
      - tika
    ports:
      - "8000:8000"
    volumes:
      - /share/ZFS19_DATA/Dokumente/paperless2/data:/usr/src/paperless/data
      - /share/ZFS19_DATA/Dokumente/paperless2/media:/usr/src/paperless/media
      - /share/ZFS19_DATA/Dokumente/export:/usr/src/paperless/export
      - /share/ZFS19_DATA/Dokumente/import:/usr/src/paperless/consume
      - /share/ZFS19_DATA/Dokumente/paperless2/scripts:/usr/src/paperless/scripts
    environment:
      PAPERLESS_OCR_LANGUAGE: deu+eng
      PAPERLESS_PRE_CONSUME_SCRIPT: /usr/src/paperless/scripts/removepassword.py
      PAPERLESS_DBHOST: postgres
      PAPERLESS_DBENGINE: postgresql
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: <DB-PASS>
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped

  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - /share/ZFS19_DATA/Dokumente/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=paperless
      - POSTGRES_PASSWORD=<DB-PASS>
  phppgadmin:
    image: qnapsystem/phppgadmin:7.13.0-1
    restart: on-failure
    ports:
      - 7070:80
    depends_on:
      - postgres
    environment:
      - PHP_PG_ADMIN_SERVER_HOST=postgres
      - PHP_PG_ADMIN_SERVER_PORT=5432

  paperless-gpt:
    # Use one of these image sources:
    image: icereed/paperless-gpt:latest # Docker Hub
    # image: ghcr.io/icereed/paperless-gpt:latest  # GitHub Container Registry
    depends_on:
      - webserver
    networks:
      - default
      - host_network
    environment:
      PAPERLESS_BASE_URL: "http://webserver:8000"
      PAPERLESS_API_TOKEN: "<PAPERLESS_API_TOKEN>"
      PAPERLESS_PUBLIC_URL: "" # Optional
      MANUAL_TAG: "paperless-gpt" # Optional, default: paperless-gpt
      AUTO_TAG: "paperless-gpt-auto" # Optional, default: paperless-gpt-auto
      # LLM Configuration - Choose one:

      # Option 1: Standard OpenAI
      #LLM_PROVIDER: "openai"
      #LLM_MODEL: "gpt-4o"
      #OPENAI_API_KEY: "your_openai_api_key"

      # Option 2: Mistral
      # LLM_PROVIDER: "mistral"
      # LLM_MODEL: "mistral-large-latest"
      # MISTRAL_API_KEY: "your_mistral_api_key"

      # Option 3: Azure OpenAI
      # LLM_PROVIDER: "openai"
      # LLM_MODEL: "your-deployment-name"
      # OPENAI_API_KEY: "your_azure_api_key"
      # OPENAI_API_TYPE: "azure"
      # OPENAI_BASE_URL: "https://your-resource.openai.azure.com"

      # Option 3: Ollama (Local)
      LLM_PROVIDER: "ollama"
      LLM_MODEL: "llama3.3:latest"
      OLLAMA_HOST: "http://192.168.178.25:11434"
      TOKEN_LIMIT: 128000 # Recommended for smaller models

      # Optional LLM Settings
      LLM_LANGUAGE: "Deutsch" # Optional, default: English

      # OCR Configuration - Choose one:
      # Option 1: LLM-based OCR
      OCR_PROVIDER: "llm" # Default OCR provider
      VISION_LLM_PROVIDER: "ollama" # openai or ollama
      VISION_LLM_MODEL: "mistral-small3.2" # minicpm-v (ollama) or gpt-4o (openai)
#      OLLAMA_HOST: "http://host.docker.internal:11434" # If using Ollama

      # OCR Processing Mode
      OCR_PROCESS_MODE: "image" # Optional, default: image, other options: pdf, whole_pdf
      PDF_SKIP_EXISTING_OCR: "false" # Optional, skip OCR for PDFs with existing OCR

      # Option 2: Google Document AI
      # OCR_PROVIDER: 'google_docai'       # Use Google Document AI
      # GOOGLE_PROJECT_ID: 'your-project'  # Your GCP project ID
      # GOOGLE_LOCATION: 'us'              # Document AI region
      # GOOGLE_PROCESSOR_ID: 'processor-id' # Your processor ID
      # GOOGLE_APPLICATION_CREDENTIALS: '/app/credentials.json' # Path to service account key

      # Option 3: Azure Document Intelligence
      # OCR_PROVIDER: 'azure'              # Use Azure Document Intelligence
      # AZURE_DOCAI_ENDPOINT: 'your-endpoint' # Your Azure endpoint URL
      # AZURE_DOCAI_KEY: 'your-key'        # Your Azure API key
      # AZURE_DOCAI_MODEL_ID: 'prebuilt-read' # Optional, defaults to prebuilt-read
      # AZURE_DOCAI_TIMEOUT_SECONDS: '120'  # Optional, defaults to 120 seconds
      # AZURE_DOCAI_OUTPUT_CONTENT_FORMAT: 'text' # Optional, defaults to 'text', other valid option is 'markdown'
      # 'markdown' requires the 'prebuilt-layout' model

      # Enhanced OCR Features
      CREATE_LOCAL_HOCR: "false" # Optional, save hOCR files locally
      LOCAL_HOCR_PATH: "/app/hocr" # Optional, path for hOCR files
      CREATE_LOCAL_PDF: "false" # Optional, save enhanced PDFs locally
      LOCAL_PDF_PATH: "/app/pdf" # Optional, path for PDF files
      PDF_UPLOAD: "true" # Optional, upload enhanced PDFs to paperless-ngx
      PDF_REPLACE: "false" # Optional and DANGEROUS, delete original after upload
      PDF_COPY_METADATA: "true" # Optional, copy metadata from original document
      PDF_OCR_TAGGING: "true" # Optional, add tag to processed documents
      PDF_OCR_COMPLETE_TAG: "paperless-gpt-ocr-complete" # Optional, tag name

      # Option 4: Docling Server
      # OCR_PROVIDER: 'docling'              # Use a Docling server
      # DOCLING_URL: 'http://your-docling-server:port' # URL of your Docling instance

      AUTO_OCR_TAG: "paperless-gpt-ocr-auto" # Optional, default: paperless-gpt-ocr-auto
      OCR_LIMIT_PAGES: "5" # Optional, default: 5. Set to 0 for no limit.
      LOG_LEVEL: "info" # Optional: debug, warn, error
    volumes:
      - /share/ZFS19_DATA/Dokumente/paperless2/gpt/prompts:/app/prompts # Mount the prompts directory
      # For Google Document AI:
      # - ${HOME}/.config/gcloud/application_default_credentials.json:/app/credentials.json
      # For local hOCR and PDF saving:
      - /share/ZFS19_DATA/Dokumente/paperless2/gpt/hocr:/app/hocr # Only if CREATE_LOCAL_HOCR is true
      - /share/ZFS19_DATA/Dokumente/paperless2/gpt/pdf:/app/pdf # Only if CREATE_LOCAL_PDF is true
    ports:
      - "8081:8080"

  paperless-ai:
    image: clusterzx/paperless-ai
    container_name: paperless-ai
    depends_on:
      - webserver
    networks:
      - default
      - host_network
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    environment:
      - PUID=1000
      - PGID=1000
      - PAPERLESS_AI_PORT=${PAPERLESS_AI_PORT:-3000}
      - RAG_SERVICE_URL=http://localhost:8000
      - RAG_SERVICE_ENABLED=true
    ports:
      - "3000:${PAPERLESS_AI_PORT:-3000}"
    volumes:
      - paperless-ai_data:/app/data

volumes:
  paperless-ai_data:


networks:
  host_network:
    driver: bridge

